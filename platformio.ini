; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[esp32devEnv]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps =
    ; https://github.com/micro-ROS/micro_ros_platformio
    ; https://github.com/tomstewart89/BasicLinearAlgebra.git
    https://github.com/hideakitai/ArduinoEigen.git
build_src_flags =
    -Wall -Wextra -Werror=return-type
monitor_speed = 115200

; ANCHOR AND TAG FOR UWB -----------------------------------------------------------------
; DEVICE TYPES
[uwb]
extends = esp32devEnv
build_src_filter = 
    +<UWB_TAG_ANCHOR/>

[tag]
build_flags = 
    -D IS_TAG ; Expose IS_TAG define to source code
    -D ANTENNA_DELAY=0

[anchor]
build_flags = 
    -D IS_ANCHOR ; Expose IS_ANCHOR define to source code

; BUILD TYPE
[debug]
build_type = debug
build_flags = 
    -D DEBUG ; Expose DEBUG define to source code

[release]
build_type = release

; TAGS (Anchor ID = 0 doesnt work, for consistency, Tag start with 1)
[env:tag_1_debug]
extends = uwb, debug
build_flags = 
    ${tag.build_flags}
    ${debug.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:10:01\"

[env:tag_1_release]
extends = uwb, release
build_flags = 
    ${tag.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:10:01\"

[env:tag_2_debug]
extends = uwb, debug
build_flags = 
    ${tag.build_flags}
    ${debug.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:10:02\"

[env:tag_2_release]
extends = uwb, release
build_flags = 
    ${tag.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:10:02\"

; ANCHORS (Anchor ID = 0 doesnt work, start with 1)
[env:anchor_1_debug]
extends = uwb, debug
build_flags = 
    ${anchor.build_flags}
    ${debug.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:01\"
    -D ANTENNA_DELAY=32923
    -D ANCHOR_COORDS_X=0
    -D ANCHOR_COORDS_Y=0
    -D ANCHOR_COORDS_Z=0

[env:anchor_1_release]
extends = uwb, release
build_flags = 
    ${anchor.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:01\"
    -D ANTENNA_DELAY=32923
    -D ANCHOR_COORDS_X=0
    -D ANCHOR_COORDS_Y=0
    -D ANCHOR_COORDS_Z=0

[env:anchor_2_debug]
extends = uwb, debug
build_flags = 
    ${anchor.build_flags}
    ${debug.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:02\"
    -D ANTENNA_DELAY=32906
    -D ANCHOR_COORDS_X=-6.415
    -D ANCHOR_COORDS_Y=0.775
    -D ANCHOR_COORDS_Z=0

[env:anchor_2_release]
extends = uwb, release
build_flags = 
    ${anchor.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:02\"
    -D ANTENNA_DELAY=32906
    -D ANCHOR_COORDS_X=-6.415
    -D ANCHOR_COORDS_Y=0.775
    -D ANCHOR_COORDS_Z=0

[env:anchor_3_debug]
extends = uwb, debug
build_flags = 
    ${anchor.build_flags}
    ${debug.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:03\"
    -D ANTENNA_DELAY=32934
    -D ANCHOR_COORDS_X=0
    -D ANCHOR_COORDS_Y=-7.02
    -D ANCHOR_COORDS_Z=0

[env:anchor_3_release]
extends = uwb, release
build_flags = 
    ${anchor.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:03\"
    -D ANTENNA_DELAY=32934
    -D ANCHOR_COORDS_X=0
    -D ANCHOR_COORDS_Y=-7.02
    -D ANCHOR_COORDS_Z=0

[env:anchor_4_debug]
extends = uwb, debug
build_flags = 
    ${anchor.build_flags}
    ${debug.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:04\"
    -D ANTENNA_DELAY=16600
    -D ANCHOR_COORDS_X=-1
    -D ANCHOR_COORDS_Y=-2
    -D ANCHOR_COORDS_Z=-3

[env:anchor_4_release]
extends = uwb, release
build_flags = 
    ${anchor.build_flags}
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:04\"
    -D ANTENNA_DELAY=16600
    -D ANCHOR_COORDS_X=-1
    -D ANCHOR_COORDS_Y=-2
    -D ANCHOR_COORDS_Z=-3

[env:anchor_calibration]
extends = esp32devEnv
build_src_filter = 
    +<ANCHOR_CALIBRATION/>
build_type = debug
build_flags = 
    -D DEVICE_ADDRESS=\"02:00:00:00:00:00:00:01\"

[env:dw1000_TX]
extends = esp32devEnv
build_src_filter = 
    +<DW1000_TX_Test/>
build_type = debug

[env:dw1000_RX]
extends = esp32devEnv
build_src_filter = 
    +<DW1000_RX_Test/>
build_type = debug

; microROS sanity -----------------------------------------------------------------
[env:microROS]
extends = esp32devEnv
build_src_filter = 
    +<microROS_Test/>
board_microros_distro = humble
board_microros_transport = wifi
lib_deps =
    https://github.com/micro-ROS/micro_ros_platformio